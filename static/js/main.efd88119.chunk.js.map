{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","useState","isPower","togglePower","isbank","toggleBank","volume","setVolume","displayText","setDisplay","getIdOfButton","event","btnId","target","id","audioId","childNodes","play","document","getElementById","className","setTimeout","addEventListener","key","audioElement","toUpperCase","parentNode","style","textAlign","fontWeight","margin","width","height","background","borderRadius","cursor","position","onClick","prevState","left","bottom","WebkitTransition","transition","transform","type","step","min","max","value","disabled","onChange","preventDefault","currentVolumeValue","newValue","replace","outline","border","src","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.efd88119.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\n\r\nfunction App() {\r\n  const [isPower, togglePower] = useState(true);\r\n  const [isbank, toggleBank] = useState(true);\r\n  const [volume, setVolume] = useState(0.5);\r\n  const [displayText, setDisplay] = useState(\"\");\r\n  \r\n  const getIdOfButton = (event) => {\r\n    let btnId = event.target.id;\r\n    setDisplay(btnId);\r\n    var audioId = event.target.childNodes[1];\r\n    audioId.volume = volume;\r\n    audioId.play();\r\n    document.getElementById(btnId).className = \"drum-pad-active\";\r\n    setTimeout(function () {\r\n      document.getElementById(btnId).className = \"drum-pad\";\r\n    }, 100);\r\n  };\r\n\r\n  document.addEventListener(\"keypress\", function (event) {\r\n    if (\r\n      (event.key) === \"q\" ||\r\n      (event.key) === \"w\" ||\r\n      (event.key) === \"e\" ||\r\n      (event.key) === \"a\" ||\r\n      (event.key) === \"s\" ||\r\n      (event.key) === \"d\" ||\r\n      (event.key) === \"z\" ||\r\n      (event.key) === \"x\" ||\r\n      (event.key) === \"c\"\r\n    ) {\r\n      let audioElement = document.getElementById(event.key.toUpperCase());    \r\n      audioElement.volume = volume;\r\n      audioElement.play();\r\n\r\n      let btnId = audioElement.parentNode.id;\r\n      document.getElementById(btnId).className = \"drum-pad-active\";\r\n      setDisplay(btnId);\r\n      setTimeout(function () {\r\n        document.getElementById(btnId).className = \"drum-pad\";\r\n      }, 100); \r\n    }\r\n  });\r\n\r\n  const handleVolumeChange = (event) => {\r\n    event.preventDefault();\r\n    let currentVolumeValue = event.target.value;\r\n    if (currentVolumeValue < 0.1 && currentVolumeValue > 0) {\r\n      const regex = /^.*[.||0]/;\r\n      let newValue = currentVolumeValue.replace(regex, \"\");\r\n      setDisplay(`Volume: ${newValue}`);\r\n    } else if (\r\n      currentVolumeValue === \"0.1\" ||\r\n      currentVolumeValue === \"0.2\" ||\r\n      currentVolumeValue === \"0.3\" ||\r\n      currentVolumeValue === \"0.4\" ||\r\n      currentVolumeValue === \"0.5\" ||\r\n      currentVolumeValue === \"0.6\" ||\r\n      currentVolumeValue === \"0.7\" ||\r\n      currentVolumeValue === \"0.8\" ||\r\n      currentVolumeValue === \"0.9\"\r\n    ) {\r\n      const regex = /^.*[.]/;\r\n      let newValue = currentVolumeValue.replace(regex, \"\");\r\n      setDisplay(`Volume: ${newValue}0`);\r\n    } else if (currentVolumeValue === \"1\") {\r\n      setDisplay(`Volume: 100`);\r\n    } else if (currentVolumeValue === \"0\") {\r\n      setDisplay(`Volume: 00`);\r\n    } else {\r\n      const regex = /^.*[.]/;\r\n      let newValue = currentVolumeValue.replace(regex, \"\");\r\n      setDisplay(`Volume: ${newValue}`);\r\n    }\r\n\r\n    setVolume(event.target.value);\r\n    setTimeout(function () {\r\n      setDisplay(\"\");\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <div id=\"drum-machine\" className=\"App\">\r\n      <div id=\"display\">{displayText}</div>\r\n      <div className=\"controllers\">\r\n        <div>\r\n          <p style={{ textAlign: \"center\", fontWeight: \"600\", margin: \"5px\" }}>\r\n            Power\r\n          </p>\r\n          <div\r\n            style={{\r\n              width: \"60px\",\r\n              height: \"34px\",\r\n              background: isPower ? \"#2196F3\" : \"#ccc\",\r\n              borderRadius: \"34px\",\r\n              cursor: \"pointer\",\r\n              position: \"relative\",\r\n            }}\r\n            onClick={() => {\r\n              togglePower((prevState) => !prevState);\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                position: \"absolute\",\r\n                height: \"26px\",\r\n                width: \"26px\",\r\n                left: \"4px\",\r\n                bottom: \"4px\",\r\n                background: \"#fff\",\r\n                borderRadius: \"50%\",\r\n                WebkitTransition: \"0.4s\",\r\n                transition: \"0.4s\",\r\n                transform: isPower ? \"translateX(26px)\" : \"translateX(0)\",\r\n              }}\r\n            ></span>\r\n          </div>\r\n        </div>\r\n        <div className=\"volume-controller\">\r\n          <p style={{ textAlign: \"center\", fontWeight: \"600\", margin: \"5px\" }}>\r\n            volume\r\n          </p>\r\n          <input\r\n            className=\"volume-slider\"\r\n            type=\"range\"\r\n            step=\"0.01\"\r\n            min=\"0\"\r\n            max=\"1\"\r\n            value={volume}\r\n            disabled={!isPower}\r\n            onChange={handleVolumeChange}\r\n          ></input>\r\n        </div>\r\n        <div>\r\n          <p style={{ textAlign: \"center\", fontWeight: \"600\", margin: \"5px\" }}>\r\n            Bank\r\n          </p>\r\n          <button\r\n            style={{\r\n              width: \"60px\",\r\n              height: \"34px\",\r\n              background: isPower ? \"#2196F3\" : \"#ccc\",\r\n              borderRadius: \"34px\",\r\n              cursor: \"pointer\",\r\n              position: \"relative\",\r\n              outline: \"none\",\r\n              border: \"none\",\r\n            }}\r\n            disabled={!isPower}\r\n            onClick={() => {\r\n              toggleBank((prevState) => !prevState);\r\n              isbank\r\n                ? setDisplay(\"Smooth Piano Kit\")\r\n                : setDisplay(\"Heater Kit\");\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                position: \"absolute\",\r\n                height: \"26px\",\r\n                width: \"26px\",\r\n                left: \"4px\",\r\n                bottom: \"4px\",\r\n                background: \"#fff\",\r\n                borderRadius: \"50%\",\r\n                WebkitTransition: \"0.4s\",\r\n                transition: \"0.4s\",\r\n                transform: isbank ? \"translateX(26px)\" : \"translateX(0)\",\r\n              }}\r\n            ></span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div id=\"drum-pad-wrapper\">\r\n        <button\r\n          id={isbank ? \"Heater 1\" : \"Chord 1\"}\r\n          className=\"drum-pad\"\r\n          onClick={getIdOfButton}\r\n        >\r\n          Q\r\n          <audio\r\n            src={isPower ? isbank ? \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\" : \"https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3\" : \"#\"\r\n            }\r\n            className=\"clip\"\r\n            id=\"Q\"\r\n          ></audio>\r\n        </button>\r\n        <button\r\n          id={isbank ? \"Heater 2\" : \"Chord 2\"}\r\n          className=\"drum-pad\"\r\n          onClick={getIdOfButton}\r\n        >\r\n          W\r\n          <audio\r\n            src={isPower ?\r\n              isbank\r\n                ? \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\"\r\n                : \"https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3\" : \"#\"\r\n            }\r\n            className=\"clip\"\r\n            id=\"W\"\r\n          ></audio>\r\n        </button>\r\n        <button\r\n          id={isbank ? \"Heater 3\" : \"Chord 3\"}\r\n          className=\"drum-pad\"\r\n          onClick={getIdOfButton}\r\n        >\r\n          E\r\n          <audio\r\n            src={ isPower?\r\n              isbank\r\n                ? \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\"\r\n                : \"https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3\" :\"#\"\r\n            }\r\n            className=\"clip\"\r\n            id=\"E\"\r\n          ></audio>\r\n        </button>\r\n        <button\r\n          id={isbank ? \"Heater 4\" : \"Shaker\"}\r\n          className=\"drum-pad\"\r\n          onClick={getIdOfButton}\r\n        >\r\n          A\r\n          <audio\r\n            src={ isPower ?\r\n              isbank\r\n                ? \"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\"\r\n                : \"https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3\" :\"#\"\r\n            }\r\n            className=\"clip\"\r\n            id=\"A\"\r\n          ></audio>\r\n        </button>\r\n        <button\r\n          id={isbank ? \"Clap\" : \"Open HH\"}\r\n          className=\"drum-pad\"\r\n          onClick={getIdOfButton}\r\n        >\r\n          S\r\n          <audio\r\n            src={ isPower ?\r\n              isbank\r\n                ? \"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\"\r\n                : \"https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3\" :\"#\"\r\n            }\r\n            className=\"clip\"\r\n            id=\"S\"\r\n          ></audio>\r\n        </button>\r\n        <button\r\n          id={isbank ? \"Open HH\" : \"Closed HH\"}\r\n          className=\"drum-pad\"\r\n          onClick={getIdOfButton}\r\n        >\r\n          D\r\n          <audio\r\n            src={isPower ?\r\n              isbank\r\n                ? \"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\"\r\n                : \"https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3\" :\"#\"\r\n            }\r\n            className=\"clip\"\r\n            id=\"D\"\r\n          ></audio>\r\n        </button>\r\n        <button\r\n          id={isbank ? \"Kick n' Hat\" : \"Punchy Kick\"}\r\n          className=\"drum-pad\"\r\n          onClick={getIdOfButton}\r\n        >\r\n          Z\r\n          <audio\r\n            src={isPower ?\r\n              isbank\r\n                ? \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\"\r\n                : \"https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3\" : \"#\"\r\n            }\r\n            className=\"clip\"\r\n            id=\"Z\"\r\n          ></audio>\r\n        </button>\r\n        <button\r\n          id={isbank ? \"Kick\" : \"Side Stick\"}\r\n          className=\"drum-pad\"\r\n          onClick={getIdOfButton}\r\n        >\r\n          X\r\n          <audio\r\n            src={isPower ?\r\n              isbank\r\n                ? \"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\"\r\n                : \"https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3\" : \"#\"\r\n            }\r\n            className=\"clip\"\r\n            id=\"X\"\r\n          ></audio>\r\n        </button>\r\n        <button\r\n          id={isbank ? \"Closed HH\" : \"Snare\"}\r\n          className=\"drum-pad\"\r\n          onClick={getIdOfButton}\r\n        >\r\n          C\r\n          <audio\r\n            src={isPower ? \r\n              isbank\r\n                ? \"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\"\r\n                : \"https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3\" : \"#\"\r\n            }\r\n            className=\"clip\"\r\n            id=\"C\"\r\n          ></audio>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}